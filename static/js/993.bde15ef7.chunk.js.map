{"version":3,"file":"static/js/993.bde15ef7.chunk.js","mappings":"wMAGaA,EAAS,WACpB,OACE,SAAC,IAAD,WAEA,SAAC,KAAD,CACIC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,KAIhB,C,2NCPYC,EAAY,SAAC,GAAa,EAAXC,KAAY,IACtC,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,SAACC,EAASC,GAC9B,OAAID,EAAQE,MAAMC,MAAMH,EAAQI,UAC9BH,GAAW,IACJ,IAETA,GAAW,IACJ,EACR,EAkCD,OACE,gCACGR,IAAa,SAACf,EAAA,EAAD,KACd,SAAC2B,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,SACNC,IAAK,GACLC,GAAI,CACFC,QAAS,gBACTC,WAAY,QACZC,UAAW,EACXC,aAAc,EACdC,EAAG,EACHC,SAAU,KAVd,oBAeA,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,YAAU,EACVC,GAAI,EACJC,GAAG,OACHC,QAAQ,OACRC,cAAc,SACdC,IAAK,EACLC,SAAS,QACTC,SAjDe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MACjBE,EAAWJ,EAAEG,OAAOC,SACpBC,EAAOL,EAAEM,cACTC,EAAelC,EAAc6B,EAAOzC,GACpC+C,EAAkBnC,EAAc+B,EAAUzC,GAC5CC,GACF6C,IAAAA,OAAAA,QAAwB,+FAErBF,GAAiBC,IAGtBrC,GACEuC,EAAAA,EAAAA,IAAM,CACJR,MAAOG,EAAKM,SAAST,MAAM1B,MAC3B4B,SAAUC,EAAKM,SAASP,SAAS5B,SAGrC6B,EAAKO,QACN,EA8BKC,aAAa,MAVf,WAYE,SAACC,EAAA,GAAD,QACExD,KAAK,QACLyD,MAAM,SACNC,KAAK,QACLpC,QAAQ,WACRqC,MAAM,UACNC,KAAK,QACLC,WAAY,CACVC,MAAO,CAAEH,MAAOhD,EAAMoD,QAAQC,UAAUC,MACxC7C,QAAS,2DAEXmC,aAAa,MACbW,SAAO,EACPC,SA3EkB,SAAAC,GACxB,IAAMxB,EAAQwB,EAAMvB,OACpB9B,EAAc6B,EAAOzC,EACtB,EAyEOG,MAAOJ,GACFA,GAAc,CACjBmE,WACE,iEAGN,SAACb,EAAA,GAAD,QACExD,KAAK,WACLyD,MAAM,WACNC,KAAK,WACLpC,QAAQ,WACRqC,MAAM,UACNC,KAAK,QACLC,WAAY,CACVC,MAAO,CAAEH,MAAOhD,EAAMoD,QAAQC,UAAUC,MACxC7C,QAAS,YAEXmC,aAAa,eACbW,SAAO,EACPC,SA1FqB,SAAAC,GAC3B,IAAMtB,EAAWsB,EAAMvB,OACvB9B,EAAc+B,EAAUzC,EACzB,EAwFOC,MAAOF,GACFA,GAAiB,CACpBiE,WAAY,mDAGhB,SAACC,EAAA,EAAD,CAAQhD,QAAQ,WAAWtB,KAAK,SAAS2D,MAAM,UAA/C,yBAMP,ECjIc,SAASY,IACtB,OACE,SAACvC,EAAA,EAAD,CACAP,GAAI,CACFD,GAAI,IAFN,UAIE,SAACzB,EAAD,KAGL,C","sources":["components/Loader.jsx","components/LoginForm/LoginForm.js","pages/Login.jsx"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\nimport { Box } from '@mui/material';\n\nexport const Loader = () => {\n  return (\n    <Box\n    >\n    <RotatingLines\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"30%\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { Box, Button, TextField, Typography, useTheme } from '@mui/material';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { selectAuthError, selectIsLoggedIn } from '../../redux/auth/selectors';\nimport { Loader } from '../Loader';\n\nexport const LoginForm = ({ type }) => {\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const error = useSelector(selectAuthError);\n  const isLoading = useSelector(selectIsLoggedIn);\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const validateInput = (element, onValidate) => {\n    if (element.value.match(element.pattern)) {\n      onValidate(false);\n      return true;\n    }\n    onValidate(true);\n    return false;\n  };\n\n  const handleEmailChange = event => {\n    const email = event.target;\n    validateInput(email, setEmailError);\n  };\n\n  const handlePasswordChange = event => {\n    const password = event.target;\n    validateInput(password, setPasswordError);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target.email;\n    const password = e.target.password;\n    const form = e.currentTarget;\n    const isValidEmail = validateInput(email, setEmailError);\n    const isValidPassword = validateInput(password, setPasswordError);\n    if (error) {\n      Notiflix.Notify.failure('произошла ошибка');\n    }\n    if (!isValidEmail || !isValidPassword) {\n      return;\n    }\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Typography\n        variant=\"h3\"\n        align=\"center\"\n        mt={-10}\n        sx={{\n          bgcolor: 'success.light',\n          fontWeight: 'light',\n          boxShadow: 1,\n          borderRadius: 2,\n          p: 2,\n          minWidth: 300,\n        }}\n      >\n        Login\n      </Typography>\n      <Box\n        component=\"form\"\n        noValidate\n        py={3}\n        mx=\"auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        gap={2}\n        maxWidth=\"500px\"\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n        <TextField\n          type=\"email\"\n          label=\"E-mail\"\n          name=\"email\"\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          inputProps={{\n            style: { color: theme.palette.secondary.main },\n            pattern: '^([0-9a-zA-Zd_.-])+@(([a-zA-Zd-])+.)+([a-zA-Zd]{2,4})+$',\n          }}\n          autoComplete=\"off\"\n          focused\n          onChange={handleEmailChange}\n          error={emailError}\n          {...(emailError && {\n            helperText:\n              'Email must contain only latin letters, numbers, @ and dots',\n          })}\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          inputProps={{\n            style: { color: theme.palette.secondary.main },\n            pattern: '^.{4,8}$',\n          }}\n          autoComplete=\"new-password\"\n          focused\n          onChange={handlePasswordChange}\n          error={passwordError}\n          {...(passwordError && {\n            helperText: 'Password must contain from 4 to 8 characters',\n          })}\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\nimport { Box } from '@mui/material';\n\nexport default function Login() {\n  return (\n    <Box \n    sx={{ \n      mt: 30\n    }}>\n      <LoginForm />\n    </Box>\n  );\n}\n"],"names":["Loader","strokeWidth","animationDuration","width","visible","LoginForm","type","useState","emailError","setEmailError","passwordError","setPasswordError","error","useSelector","selectAuthError","isLoading","selectIsLoggedIn","theme","useTheme","dispatch","useDispatch","validateInput","element","onValidate","value","match","pattern","Typography","variant","align","mt","sx","bgcolor","fontWeight","boxShadow","borderRadius","p","minWidth","Box","component","noValidate","py","mx","display","flexDirection","gap","maxWidth","onSubmit","e","preventDefault","email","target","password","form","currentTarget","isValidEmail","isValidPassword","Notiflix","logIn","elements","reset","autoComplete","TextField","label","name","color","size","inputProps","style","palette","secondary","main","focused","onChange","event","helperText","Button","Login"],"sourceRoot":""}