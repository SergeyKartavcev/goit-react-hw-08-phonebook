{"version":3,"file":"static/js/607.77793c8a.chunk.js","mappings":"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","sources":["components/Loader.jsx","components/constants.js","components/RegisterForm/RegisterForm.js","pages/Register.jsx"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\nimport { Box } from '@mui/material';\n\nexport const Loader = () => {\n  return (\n    <Box\n    >\n    <RotatingLines\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"30%\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","\nexport const AUTH_TYPES = { REGISTER: 'registration', LOGIN: 'login' };\n\nexport const MESSAGE_TYPES = {\n  ERROR: 'error',\n  NO_RESULTS: 'noResults',\n};\n","import { registerForm } from '../../redux/auth/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectAuthError, selectIsLoggedIn } from '../../redux/auth/selectors';\nimport { Box, Button, TextField, Typography, useTheme } from '@mui/material';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../Loader';\nimport { AUTH_TYPES } from '../constants';\n\nexport const RegisterForm = ({ type }) => {\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const isLoading = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectAuthError);\n\n  const isRegister = type === AUTH_TYPES.REGISTER;\n  const theme = useTheme();\n\n  const validateInput = (element, onValidate) => {\n    if (element.value.match(element.pattern)) {\n      onValidate(false);\n      return true;\n    }\n    onValidate(true);\n    return false;\n  };\n\n  const handleNameChange = event => {\n    const name = event.target;\n    validateInput(name, setNameError);\n  };\n\n  const handleEmailChange = event => {\n    const email = event.target;\n    validateInput(email, setEmailError);\n  };\n\n  const handlePasswordChange = event => {\n    const password = event.target;\n    validateInput(password, setPasswordError);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = e.target?.name;\n    const email = e.target.email;\n    const password = e.target.password;\n\n    const isValidName = isRegister ? validateInput(name, setNameError) : true;\n    const isValidEmail = validateInput(email, setEmailError);\n    const isValidPassword = validateInput(password, setPasswordError);\n\n    if (!isValidName || !isValidEmail || !isValidPassword) {\n      return;\n    }\n    if (error) {\n      Notiflix.Notify.failure('произошла ошибка');\n    }\n    dispatch(\n      registerForm({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Typography\n        variant=\"h3\"\n        align=\"center\"\n        sx={{\n          bgcolor: 'success.light',\n          fontWeight: 'light',\n          boxShadow: 1,\n          borderRadius: 2,\n          p: 2,\n          minWidth: 300,\n        }}\n      >\n        Registeretion\n      </Typography>\n      <Box\n        component=\"form\"\n        noValidate\n        py={4}\n        mx=\"auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        gap={2}\n        maxWidth=\"500px\"\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n        <TextField\n          type=\"text\"\n          required\n          minLength=\"4\"\n          maxLength=\"8\"\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            style: { color: theme.palette.secondary.main },\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          autoComplete=\"off\"\n          focused\n          onChange={handleNameChange}\n          error={nameError}\n          {...(nameError && {\n            helperText:\n              \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          })}\n        />\n\n        <TextField\n          type=\"email\"\n          required\n          label=\"E-mail\"\n          name=\"email\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            style: { color: theme.palette.secondary.main },\n            pattern: '^([0-9a-zA-Zd_.-])+@(([a-zA-Zd-])+.)+([a-zA-Zd]{2,4})+$',\n          }}\n          autoComplete=\"off\"\n          focused\n          onChange={handleEmailChange}\n          error={emailError}\n          {...(emailError && {\n            helperText:\n              'Email must contain only latin letters, numbers, @ and dots',\n          })}\n        />\n\n        <TextField\n          type=\"password\"\n          required\n          label=\"Password\"\n          name=\"password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            style: { color: theme.palette.secondary.main },\n            pattern: '^.{4,8}$',\n          }}\n          autoComplete=\"new-password\"\n          focused\n          onChange={handlePasswordChange}\n          error={passwordError}\n          {...(passwordError && {\n            helperText: 'Password must contain from 4 to 8 characters',\n          })}\n        />\n        <Button variant=\"outlined\" type=\"submit\" >\n          Submit\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Box } from '@mui/material';\nexport default function Register() {\n  return (\n    <Box sx={{ mt: 20 }}>\n      <RegisterForm />\n    </Box>\n  );\n}\n"],"names":["Loader","strokeWidth","animationDuration","width","visible","AUTH_TYPES","RegisterForm","type","useState","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","isLoading","useSelector","selectIsLoggedIn","error","selectAuthError","isRegister","theme","useTheme","validateInput","element","onValidate","value","match","pattern","dispatch","useDispatch","Typography","variant","align","sx","bgcolor","fontWeight","boxShadow","borderRadius","p","minWidth","Box","component","noValidate","py","mx","display","flexDirection","gap","maxWidth","onSubmit","e","preventDefault","form","currentTarget","name","target","email","password","isValidName","isValidEmail","isValidPassword","Notiflix","registerForm","elements","reset","autoComplete","TextField","required","minLength","maxLength","label","size","inputProps","style","color","palette","secondary","main","focused","onChange","event","helperText","Button","Register","mt"],"sourceRoot":""}